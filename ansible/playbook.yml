- hosts: all
  become: yes
  tasks:
    - name: disable swap
      shell: |
        swapoff -a
        sed -i.bak '/ swap / s/^/#/' /etc/fstab

    - name: install dependencies
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - software-properties-common
        state: present
        update_cache: yes

- hosts: all
  become: yes
  tasks:
    - name: Install Docker
      shell: |
        wget https://raw.githubusercontent.com/lerndevops/labs/master/scripts/installDocker.sh -P /tmp
        chmod 755 /tmp/installDocker.sh
        bash /tmp/installDocker.sh
        systemctl restart docker.service

    - name: Install CRI-Docker
      shell: |
        wget https://raw.githubusercontent.com/lerndevops/labs/master/scripts/installCRIDockerd.sh -P /tmp
        chmod 755 /tmp/installCRIDockerd.sh
        bash /tmp/installCRIDockerd.sh
        systemctl restart cri-docker.service

    - name: Install kubeadm, kubelet, kubectl
      shell: |
        wget https://raw.githubusercontent.com/lerndevops/labs/master/scripts/installK8S.sh -P /tmp
        chmod 755 /tmp/installK8S.sh
        bash /tmp/installK8S.sh

    - name: Ensure Docker service is running and enabled
      service:
        name: docker
        state: started
        enabled: true

    - name: Allow ubuntu user to run docker without sudo
      user:
        name: ubuntu
        groups: docker
        append: yes

    - name: Reset ssh connection to apply new docker group membership
      meta: reset_connection

- hosts: master
  become: yes
  tasks:
    - name: Initialize Kubernetes Master Node
      shell: kubeadm init --cri-socket unix:///var/run/cri-dockerd.sock --pod-network-cidr=10.244.0.0/16 --ignore-preflight-errors=all
      register: kubeadm_init

    - name: Set kubeconfig for ubuntu
      shell: |
        mkdir -p /home/ubuntu/.kube
        cp -i /etc/kubernetes/admin.conf /home/ubuntu/.kube/config
        chown ubuntu:ubuntu /home/ubuntu/.kube/config

    - name: Export KUBECONFIG for root (optional)
      shell: export KUBECONFIG=/etc/kubernetes/admin.conf

    - name: Install Calico networking driver
      shell: |
        export KUBECONFIG=/etc/kubernetes/admin.conf
        kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.24.1/manifests/calico.yaml

    - name: Generate join command for workers
      shell: kubeadm token create --print-join-command
      register: join_cmd

    - set_fact:
        kube_join: "{{ join_cmd.stdout }}"

- hosts: workers
  become: yes
  tasks:
    - name: Enable network features for worker nodes
      shell: |
        modprobe br_netfilter
        echo 1 > /proc/sys/net/bridge/bridge-nf-call-iptables
        echo 1 > /proc/sys/net/ipv4/ip_forward

    - name: Join worker to Kubernetes cluster
      shell: "sudo {{ hostvars[groups['master'][0]]['kube_join'] }} --cri-socket unix:///var/run/cri-dockerd.sock"

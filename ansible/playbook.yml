- hosts: all
  become: yes
  tasks:
    - name: disable swap
      shell: |
        swapoff -a
        sed -i.bak '/ swap / s/^/#/' /etc/fstab

    - name: install dependencies
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - software-properties-common
        state: present
        update_cache: yes

    - name: install Docker
      shell: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" > /etc/apt/sources.list.d/docker.list
        apt-get update
        apt-get install -y docker-ce docker-ce-cli containerd.io
        usermod -aG docker ubuntu || true

    - name: Ensure Docker service is running and enabled
      service:
        name: docker
        state: started
        enabled: true

    - name: Allow ubuntu user to run docker without sudo
      user:
        name: ubuntu
        groups: docker
        append: yes

    - name: Reset ssh connection to apply new docker group membership
      meta: reset_connection

    - name: add Kubernetes apt repo
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present

    - name: install kubelet, kubeadm, kubectl
      apt:
        name: [kubelet, kubeadm, kubectl]
        state: present
        update_cache: yes

    - name: hold kube packages
      shell: apt-mark hold kubelet kubeadm kubectl

- hosts: master
  become: yes
  tasks:
    - name: init k8s master
      shell: kubeadm init --apiserver-advertise-address={{ ansible_host }} --pod-network-cidr=10.244.0.0/16
      args: { warn: false }
      register: kubeadm_init

    - name: set kubeconfig for ubuntu
      shell: |
        mkdir -p /home/ubuntu/.kube
        cp /etc/kubernetes/admin.conf /home/ubuntu/.kube/config
        chown ubuntu:ubuntu /home/ubuntu/.kube/config

    - name: install flannel CNI
      shell: |
        export KUBECONFIG=/etc/kubernetes/admin.conf
        kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml

    - name: generate join command
      shell: kubeadm token create --print-join-command
      register: join_cmd

    - set_fact:
        kube_join: "{{ join_cmd.stdout }}"

- hosts: workers
  become: yes
  tasks:
    - name: join worker to cluster
      shell: "{{ hostvars[groups['master'][0]]['kube_join'] }}"
